#BlueJ class context
comment0.target=Peca
comment0.text=\n\ Representa\ uma\ Pe\u00E7a\ do\ jogo.\n\ Possui\ uma\ casa\ e\ um\ tipo\ associado.\n\ \n\ @author\ Alan\ Moraes\ alan@ci.ufpb.br;\n\ @author\ Leonardo\ Villeth\ lvilleth@cc.ci.ufpb.br;\n\ @author\ Emmanuella\ F.\ Albuquerque\ emmanuellaalbuquerque@cc.ci.ufpb.br;\n
comment1.params=casa\ tipo
comment1.target=Peca(Casa,\ int)
comment10.params=
comment10.target=java.lang.String\ getDirecao()
comment10.text=\n\ Determina\ as\ dire\u00E7\u00F5es\ atuais\ da\ pe\u00E7a.\ \n\ @return\ String\ (sentido),\ retorna\ o\ sentido\ atual\ da\ pe\u00E7a.\n
comment11.params=destino
comment11.target=void\ trocarSentido(Casa)
comment11.text=\n\ Troca\ o\ sentido\ da\ pe\u00E7a.\n\ @param\ destino,\ destino\ que\ se\ encontra\ a\ pe\u00E7a.\n
comment2.params=casa
comment2.target=Casa\ setCasa(Casa)
comment2.text=\n\ Determina\ uma\ nova\ casa\ para\ a\ pe\u00E7a.\n\ @param\ casa,\ \u00E9\ a\ nova\ casa.\n
comment3.params=origem\ destino\ peca
comment3.target=boolean\ realizaMovimentoNormal(Casa,\ Casa,\ Peca)
comment3.text=\n\ Movimenta\ a\ peca\ para\ uma\ nova\ casa.\n\ @param\ origem,\ casa\ que\ cont\u00E9m\ a\ pe\u00E7a.\n\ @param\ destino,\ nova\ casa\ que\ ira\ conter\ esta\ peca.\n\ @param\ peca,\ \u00E9\ a\ pe\u00E7a\ que\ ir\u00E1\ mover.\n\ @return\ retorna\ true\ se\ movimento\ normal\ aconteceu\ ou\ false\ se\ n\u00E3o\ aconteceu.\n
comment4.params=origem\ destino
comment4.target=boolean\ moverNormal(Casa,\ Casa)
comment4.text=\n\ Move\ para\ uma\ casa\ vazia.\n\ @param\ origem,\ casa\ que\ cont\u00E9m\ a\ pe\u00E7a.\n\ @param\ destino,\ nova\ casa\ que\ ira\ conter\ esta\ peca.\n\ @return\ retorna\ true\ se\ movimento\ poss\u00EDvel\ ou\ false\ se\ movimento\ inv\u00E1lido.\n
comment5.params=origem\ destino
comment5.target=boolean\ MovimentoNormalBranca(Casa,\ Casa)
comment5.text=\n\ Verifica\ se\ o\ movimento\ da\ pedra\ branca\ est\u00E1\ correto,\ ou\ seja,\ o\ movimento\ positivo/para\ cima.\n\ @param\ origem,\ casa\ que\ cont\u00E9m\ a\ pe\u00E7a.\n\ @param\ destino,\ nova\ casa\ que\ ira\ conter\ esta\ peca.\n\ @return\ retorna\ true\ se\ movimento\ certo.\n
comment6.params=origem\ destino
comment6.target=boolean\ MovimentoNormalVermelha(Casa,\ Casa)
comment6.text=\n\ Verifica\ se\ o\ movimento\ da\ pedra\ vermelha\ est\u00E1\ correto,\ ou\ seja,\ o\ movimento\ negativo/para\ baixo.\n\ @param\ origem,\ casa\ que\ cont\u00E9m\ a\ pe\u00E7a.\n\ @param\ destino,\ nova\ casa\ que\ ira\ conter\ esta\ peca.\n\ @return\ retorna\ true\ se\ movimento\ certo.\n
comment7.params=
comment7.target=int\ getTipo()
comment7.text=\n\ Valor\ \ \ \ Tipo\n\ \ \ 0\ \ \ Branca\ (Pedra)\n\ \ \ 1\ \ \ Branca\ (Dama)\n\ \ \ 2\ \ \ Vermelha\ (Pedra)\n\ \ \ 3\ \ \ Vermelha\ (Dama)\n\ @return\ o\ tipo\ da\ peca.\n
comment8.params=
comment8.target=java.lang.String\ getTipoString()
comment8.text=\n\ Retorna\ a\ cor\ de\ uma\ pe\u00E7a\ em\ uma\ string.\n\ @return\ String\ (tipo),\ retorna\ a\ cor\ da\ pe\u00E7a.\n
comment9.params=peca
comment9.target=java.lang.String\ direcoesIniciais(Peca)
comment9.text=\n\ Determina\ as\ dire\u00E7\u00F5es\ iniciais\ de\ cada\ pe\u00E7a.\ \n\ @return\ String\ (sentido),\ retorna\ o\ sentido\ inicial\ da\ pe\u00E7a.\n
numComments=12
